async function fetchHeaderData() {
  const headerElement = document.getElementById("header");
  const footerElement = document.getElementById("footer-nav");
  try {
    const response = await fetch(
      "http://localhost/jcc_solutions/wordpress/wp-json/wp/v2/pages?_fields=slug,title,menu_order,template&orderby=menu_order&order=asc"
    );

    if (!response.ok) {
      throw new Error(`HTTP error! Status: ${response.status}`);
    }

    const data = await response.json();

    if (data.length > 0) {
      setHeaderData(data, headerElement);
      setFooterData(data, footerElement);
    } else {
      console.error("No pages found.");
      headerElement.innerHTML = "<p>No menu items available.</p>";
      footerElement.innerHTML = "<p>No menu items available.</p>";
    }
  } catch (error) {
    console.error("Error fetching data:", error);
    headerElement.innerHTML = "<p>Error loading menu.</p>";
    footerElement.innerHTML = "<p>Error loading footer menu.</p>";
  }
}

export function generateNav(menuItems) {
  return menuItems

    .map(
      (item) =>
        `<li class="${item.template == "page-with-sidebar" ? "dropdown" : ""}">
                    <a href="${item.slug}">
                      ${item.title.rendered}
                    </a>
                  </li>`
    )
    .join("");
}

function setHeaderData(menuItems, headerElement) {
  const lastMenuItem = menuItems[menuItems.length - 1];
  headerElement.innerHTML = `
    <div class="container">
      <a href="#">
                <svg width="78" height="34" viewBox="0 0 78 34" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clip-path="url(#clip0_2114_811)">
<mask id="mask0_2114_811" style="mask-type:luminance" maskUnits="userSpaceOnUse" x="0" y="0" width="78" height="34">
<path d="M77.7472 0.691406H10.4316C5.17145 0.691406 0.907227 4.95563 0.907227 10.2158V33.7375H77.7472V0.691406Z" fill="white"/>
</mask>
<g mask="url(#mask0_2114_811)">
<path d="M18.5642 7.17969V21.9748C18.5642 22.1894 18.5589 22.3961 18.5536 22.6107C18.4771 23.9625 18.1659 25.2601 17.6647 26.4516C17.5935 26.6222 17.517 26.7928 17.4352 26.9582C17.3745 27.0978 17.298 27.2296 17.2295 27.3744C16.8628 28.0516 16.4434 28.6952 15.9581 29.2871C15.8446 29.4318 15.7233 29.5714 15.6046 29.7084C15.2221 30.1349 14.8027 30.5407 14.3622 30.9103C14.2488 31.0111 14.1275 31.1068 14.0088 31.205C13.9481 31.2541 13.8822 31.2955 13.8241 31.3342C13.6711 31.4505 13.5182 31.5591 13.3599 31.6651C13.3493 31.6702 13.3441 31.6754 13.3335 31.6806C13.3019 31.7013 13.2676 31.7245 13.2359 31.7452C13.1858 31.7762 13.1383 31.815 13.0882 31.846C12.9458 31.9416 12.7928 32.0321 12.6424 32.1122H12.6372C12.5818 32.1433 12.529 32.1769 12.4736 32.2027C12.3417 32.2777 12.2125 32.3526 12.0806 32.4224C11.9935 32.4663 11.9065 32.5025 11.8247 32.5465C11.7931 32.562 11.7588 32.5723 11.7271 32.5904C11.6902 32.6059 11.6559 32.6266 11.619 32.6447C11.4396 32.7248 11.2761 32.7998 11.102 32.8696C11.0624 32.8851 11.0255 32.8954 10.9886 32.9135C10.9622 32.9238 10.9279 32.9342 10.9015 32.9445C10.7591 32.9988 10.6114 33.0505 10.4663 33.0996C10.3239 33.1487 10.1761 33.1952 10.0311 33.2392C9.8517 33.2935 9.65915 33.34 9.4745 33.3891C9.42439 33.4046 9.37691 33.4098 9.32679 33.4201C9.1738 33.4563 9.02081 33.4899 8.86782 33.5209C8.74121 33.5416 8.61196 33.5649 8.48008 33.5855C8.42996 33.5959 8.3772 33.6062 8.32181 33.6114C8.24532 33.6217 8.16882 33.6321 8.08705 33.6424C7.93934 33.6631 7.79163 33.6734 7.64655 33.6915C7.60699 33.6967 7.56478 33.6967 7.52521 33.7019C7.45927 33.707 7.38805 33.707 7.32475 33.7122C7.20077 33.7174 7.07416 33.7225 6.94227 33.7277C6.82094 33.738 6.69169 33.738 6.57035 33.738H6.56508C6.4411 33.738 6.31449 33.738 6.18788 33.7277C6.06391 33.7277 5.93729 33.7174 5.81068 33.7122C5.73946 33.707 5.67352 33.707 5.60494 33.7019C5.33853 33.6812 5.06948 33.6476 4.80834 33.6114C4.75295 33.6062 4.70547 33.5959 4.65008 33.5855C4.43115 33.5545 4.22013 33.5106 4.00647 33.4692C3.94053 33.4537 3.86931 33.4382 3.806 33.4201C3.75588 33.4098 3.70841 33.4046 3.65829 33.3891C3.64246 33.3839 3.62664 33.3788 3.6029 33.3736C3.53168 33.3581 3.45518 33.3374 3.37869 33.3141C3.33912 33.3038 3.30219 33.2986 3.26527 33.2831C3.18877 33.2625 3.11755 33.2418 3.04106 33.2185C2.76937 33.1384 2.49505 33.0479 2.22863 32.9445C2.20226 32.9342 2.17324 32.9238 2.14159 32.9135C2.12576 32.9032 2.10994 32.898 2.0862 32.8928C2.06509 32.8877 2.04663 32.8825 2.0308 32.8722C1.97541 32.8515 1.92266 32.8282 1.86726 32.8024C1.74856 32.7533 1.6325 32.7016 1.51381 32.6473C1.47688 32.6318 1.43731 32.6111 1.40038 32.593C1.36873 32.5775 1.33444 32.5672 1.30806 32.5491C1.22102 32.5051 1.13397 32.4689 1.0522 32.425C1.00472 32.4043 0.959881 32.3759 0.915039 32.35L2.38162 28.0128L3.17822 25.6452C3.24416 25.7046 3.33121 25.7796 3.35231 25.8003C3.41825 25.8545 3.48156 25.9011 3.55278 25.9502C3.55278 25.9502 3.55805 25.9554 3.56333 25.9554C3.73742 26.0846 3.9247 26.2009 4.11462 26.3069C4.18056 26.3379 4.23859 26.3715 4.30453 26.4025C4.32564 26.4129 4.35465 26.4232 4.38103 26.4387C4.43115 26.4594 4.47863 26.4826 4.52874 26.5033C4.57358 26.524 4.62106 26.5473 4.67118 26.5679C4.68173 26.5731 4.69228 26.5731 4.70283 26.5783C4.82153 26.6248 4.94287 26.6636 5.06157 26.6998C5.10113 26.7101 5.14334 26.7204 5.18026 26.7359C5.19081 26.7411 5.20664 26.7411 5.21719 26.7463C5.34908 26.7773 5.47833 26.8109 5.61022 26.8316C5.63132 26.8368 5.65506 26.8419 5.67616 26.8419C5.7975 26.8678 5.91619 26.8859 6.04544 26.8962C6.11666 26.9065 6.19316 26.9117 6.26438 26.9117C6.36197 26.922 6.45957 26.922 6.5598 26.922C6.72862 26.922 6.89216 26.9169 7.0557 26.9014C7.12164 26.891 7.18758 26.8859 7.25353 26.8755C7.34057 26.8704 7.42762 26.8548 7.50939 26.8393C7.64655 26.8135 7.77052 26.7851 7.90241 26.7489C7.91296 26.7437 7.92879 26.7437 7.94198 26.7385C8.06595 26.6946 8.19256 26.6584 8.31126 26.6145C8.36138 26.599 8.40886 26.5834 8.4537 26.5654C8.5513 26.5214 8.64889 26.4801 8.74913 26.4361C8.77023 26.4206 8.79924 26.4103 8.82034 26.3999C8.88629 26.3689 8.95223 26.3353 9.01026 26.3043C9.07621 26.2733 9.13687 26.2345 9.1949 26.1983C9.32679 26.1285 9.44549 26.0484 9.56682 25.9528L9.5721 25.9476C9.68552 25.8726 9.79103 25.7925 9.88863 25.6969C9.89918 25.6917 9.90973 25.6814 9.92028 25.671C9.95985 25.64 9.9915 25.6064 10.0284 25.5754C10.0601 25.5495 10.0944 25.5159 10.126 25.4849C10.1577 25.4539 10.1867 25.4203 10.2183 25.3893C10.2342 25.3738 10.2447 25.3583 10.2579 25.3402C10.3555 25.2549 10.4478 25.1489 10.5243 25.0455C10.8118 24.6992 11.0413 24.3192 11.2154 23.9134C11.2761 23.7635 11.3367 23.6032 11.3895 23.4481C11.4713 23.1819 11.5425 22.8976 11.5741 22.6081C11.6005 22.3936 11.619 22.1868 11.619 21.9722V9.43359L18.5642 7.17969Z" fill="white"/>
<path d="M47.2114 23.4036C44.9192 26.0556 41.9571 27.3997 38.4067 27.3997C35.7135 27.3997 33.387 26.4614 31.4958 24.6159C29.6045 22.7626 28.647 20.2632 28.647 17.2132C28.647 14.1631 29.6599 11.6921 31.6672 9.88021C33.6666 8.08122 36.1092 7.17139 38.921 7.17139C42.1839 7.17139 44.9773 8.42499 47.2457 10.8857L49.2583 4.91748L49.4641 4.30748C46.3647 1.90107 42.7246 0.691406 38.5913 0.691406C33.8223 0.691406 29.7364 2.29396 26.4392 5.44994C23.1473 8.59817 21.4697 12.5942 21.4697 17.3088C21.4697 22.0234 23.1183 25.9858 26.3469 29.0772C29.5755 32.1634 33.751 33.7297 38.7575 33.7297C42.6983 33.7297 46.2698 32.4503 49.4113 29.9095L49.261 29.4623L47.2114 23.4036Z" fill="white"/>
<path d="M75.4914 23.4036C73.1992 26.0556 70.237 27.3997 66.6866 27.3997C63.9935 27.3997 61.667 26.4614 59.7758 24.6159C57.8845 22.7626 56.927 20.2632 56.927 17.2132C56.927 14.1631 57.9399 11.6921 59.9472 9.88021C61.9466 8.08122 64.3892 7.17139 67.201 7.17139C70.4639 7.17139 73.2572 8.42499 75.5257 10.8857L77.5383 4.91748L77.744 4.30748C74.6447 1.90107 71.0046 0.691406 66.8686 0.691406C62.0996 0.691406 58.0138 2.29396 54.7166 5.44994C51.4247 8.59817 49.7471 12.5942 49.7471 17.3088C49.7471 22.0234 51.3957 25.9858 54.6243 29.0772C57.8502 32.1634 62.0284 33.7297 67.0322 33.7297C70.973 33.7297 74.5445 32.4503 77.686 29.9095L77.5357 29.4623L75.4861 23.4036H75.4914Z" fill="white"/>
</g>
<path d="M0.90332 0.691406V8.91868L12.5911 5.12685L19.0747 3.02802L26.2705 0.691406H0.90332Z" fill="#334EB9"/>
</g>
<defs>
<clipPath id="clip0_2114_811">
<rect width="77" height="33" fill="white" transform="translate(0.786133 0.5)"/>
</clipPath>
</defs>
</svg>
            </a>
      <nav>
        <ul>
          ${generateNav(menuItems)}
        </ul>
        <a class="btn btn-blue" href="${lastMenuItem.slug}">${
    lastMenuItem.title.rendered
  }</a>
      </nav>
    </div>
  `;
}

function setFooterData(menuItems, footerElement) {
  footerElement.innerHTML = `
    <nav>
      <ul>
        ${generateNav(menuItems)}
      </ul>
    </nav>
  `;
}

document.addEventListener("DOMContentLoaded", fetchHeaderData);
